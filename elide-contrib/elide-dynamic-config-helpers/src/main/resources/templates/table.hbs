package com.yahoo.elide.contrib.dynamicconfig.model;

import com.yahoo.elide.annotation.Include;
import com.yahoo.elide.datastores.aggregation.annotation.Cardinality;
import com.yahoo.elide.datastores.aggregation.annotation.CardinalitySize;
import com.yahoo.elide.datastores.aggregation.annotation.DimensionFormula;
import com.yahoo.elide.datastores.aggregation.annotation.Join;
import com.yahoo.elide.datastores.aggregation.annotation.JoinTo;
import com.yahoo.elide.datastores.aggregation.annotation.Temporal;
import com.yahoo.elide.datastores.aggregation.annotation.TimeGrainDefinition;
import com.yahoo.elide.datastores.aggregation.metadata.enums.TimeGrain;
import com.yahoo.elide.datastores.aggregation.queryengines.sql.annotation.FromTable;

import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.Data;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Id;
import javax.persistence.Entity;

/**
 * A root level entity for testing AggregationDataStore.
 */
@Include(rootLevel = true)
@Cardinality(size = CardinalitySize.{{#toUpperCase cardinality}}{{/toUpperCase}})
@EqualsAndHashCode
@ToString
@Entity
@Data
{{#if table}}@FromTable(name = "{{table}}"){{/if}}
public class {{#capitalizeFirstLetter name}}{{/capitalizeFirstLetter}} {

    @Id
    private String name;

{{#each dimensions}}
    private {{#getDimensionType this}}{{/getDimensionType}} {{name}};
{{/each}}

{{#each joins}}
    private {{#capitalizeFirstLetter to}}{{/capitalizeFirstLetter}} {{ name }};
 {{/each}}

{{#each dimensions}}
{{!--  --}}
{{#ifDimTypeMatches this "TIME"}}
    @Temporal(grains = {
    {{#each grains}}
            @TimeGrainDefinition(grain = TimeGrain.{{grain}}, expression = "{{sql}}"){{#if @last}}{{else}}, {{/if}}
    {{/each}}
    }, timeZone = "UTC")

    {{#generateDimGetterMethod this}}{{/generateDimGetterMethod}}

    {{#generateDimSetterMethod this}}{{/generateDimSetterMethod}}

{{!--  --}}
{{else}}
    {{#ifContains definition "."}}
        @JoinTo(path = "{{definition}}")
        @Column(updatable = false, insertable = false)
        {{#generateDimGetterMethod this}}{{/generateDimGetterMethod}}

        {{#generateDimSetterMethod this}}{{/generateDimSetterMethod}}
    {{!--  --}}
    {{else}}
        @DimensionFormula("{{definition}}")
        {{#generateDimGetterMethod this}}{{/generateDimGetterMethod}}
    {{!--  --}}
    {{/ifContains}}
{{/ifDimTypeMatches}}
{{/each}}

{{#each joins}}
    @Join("{{ definition }}")
    {{#generateJoinGetterMethod this}}{{/generateJoinGetterMethod}}

    {{#generateJoinSetterMethod this}}{{/generateJoinSetterMethod}}

{{/each}}
}